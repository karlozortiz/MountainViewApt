/*
Deployment script for Apartment_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Apartment_1"
:setvar DefaultFilePrefix "Apartment_1"
:setvar DefaultDataPath "C:\Users\williamv\AppData\Local\Microsoft\VisualStudio\SSDT\Apartment"
:setvar DefaultLogPath "C:\Users\williamv\AppData\Local\Microsoft\VisualStudio\SSDT\Apartment"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Apartment]...';


GO
CREATE TABLE [dbo].[Apartment] (
    [AptId]           INT           IDENTITY (1, 1) NOT NULL,
    [AptAddress]      NVARCHAR (50) NULL,
    [SqFootage]       INT           NULL,
    [MonthUtilityFee] FLOAT (53)    NULL,
    [MonthParkfee]    FLOAT (53)    NULL,
    [LastCleanDate]   DATETIME      NULL,
    [IsVacant]        BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([AptId] ASC)
);


GO
PRINT N'Creating [dbo].[Contract]...';


GO
CREATE TABLE [dbo].[Contract] (
    [ContractId]  INT        IDENTITY (1, 1) NOT NULL,
    [StartDate]   DATETIME   NULL,
    [EndDate]     DATETIME   NULL,
    [MonthlyRent] FLOAT (53) NULL,
    [AptId]       INT        NOT NULL,
    [TenantId]    INT        NOT NULL,
    PRIMARY KEY CLUSTERED ([ContractId] ASC)
);


GO
PRINT N'Creating [dbo].[Tenant]...';


GO
CREATE TABLE [dbo].[Tenant] (
    [TenantId]  INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50) NULL,
    [LastName]  NVARCHAR (50) NULL,
    [Phone]     BIGINT        NULL,
    [Email]     NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([TenantId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_dbo.Contract_dbo.Apartment_AptId]...';


GO
ALTER TABLE [dbo].[Contract] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Contract_dbo.Apartment_AptId] FOREIGN KEY ([AptId]) REFERENCES [dbo].[Apartment] ([AptId]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dbo.Contract_dbo.Tenant_TenantId]...';


GO
ALTER TABLE [dbo].[Contract] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.Contract_dbo.Tenant_TenantId] FOREIGN KEY ([TenantId]) REFERENCES [dbo].[Tenant] ([TenantId]) ON DELETE CASCADE;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Contract] WITH CHECK CHECK CONSTRAINT [FK_dbo.Contract_dbo.Apartment_AptId];

ALTER TABLE [dbo].[Contract] WITH CHECK CHECK CONSTRAINT [FK_dbo.Contract_dbo.Tenant_TenantId];


GO
PRINT N'Update complete.';


GO
